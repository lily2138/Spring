db 정규화(Normalization)
정규화란?
한마디로 DB서버의 메모리를 낭비하지 않기 위해서
어떤 테이블을 식별자를 가지는 여러개의 테이블로 
나누는 과정을 정규화라 한다
정규화된 데이타베이스는 중복이 최소화되도록 설계된 데이타베이스이다

장단점

장점 1. 메모리를 절약할수 있다
     2. 구조화된 시스템으로 인해서 관리가 편하다
단점 조회비율이 매누 높은 시스템의 경우에는 테이블간의
     join 연산이 반복적으로 이뤄지기 때문에 질의 응답 속도가 
     살짝 늦어질수 있다
-------------------------------------------------------------------
-------------------------------------------------------------------
<정규화 이전 테이블>
회사,직원 테이블 : companysawon
회사명 : company  문자열(10)
회사주소 : address 문자열(20)
회사전화 : phone  문자열(15)
직원명 : sawon_name 문자열(10)
직급 : position   문자열(10)
이메일 : email 문자열(20)
휴대폰 : hp 문자열(20)

//MySQL
create table companysawon (company varchar(20),address varchar(50),
phone varchar(35),sawon_name varchar(30),position varchar(30),
email varchar(50),hp varchar(20));


Insert Into companysawon VALUES('LG', '서울 강남구', '02-146-1994', '강호동', '부장', 'aaa@naver.com', '010-1469-9416');
Insert Into companysawon VALUES('KT', '경기도 분당', '031-146-1994', '이수근', '사원', 'bbb@naver.com', '010-9863-4356');
Insert Into companysawon VALUES('SKT', '부산 해운대', '051-146-1994', '이영자', '과장', 'ccc@naver.com', '010-1356-6348');
------> 어떤 문제가 있을까?
1) 거래처 회사에 대한 정보나 거래처 직원이 추가될때마다 불필요한 데이타를 계속 업데이트 해야한다.
2) 1)로 인한 작업으로 메모리 낭비가 심해진다.
3) 회사가 이전을 하거나 특정 정보가 변경될 경우에도 많은 데이타들이 한꺼번에 수정되어져야 한다.
======> 정규화된 테이블로 정보를 수정



<정규화 적용한 후 테이블>

회사테이블 : company
------------------------------
회사아이디 : company_id number(5) : 기본키(primary key)
회사명 : company  문자열(10)
회사주소 : address 문자열(20)
회사전화 : phone  문자열(15)

//MySQL
create table company (company_id int primary key,
company varchar(20),address varchar(50),phone varchar(35));

Insert into company VALUES(10, 'LG', '서울 강남구', '02-146-1994');
Insert into company VALUES(20, 'KT', '경기도 분당', '031-146-1994');
Insert into company VALUES(30, 'SKT', '부산 해운대', '051-146-1994');



=============================================================

거래처 직원 테이블 : sawon
------------------------------
직원명 : sawon_name 문자열(10)
직급 : position   문자열(10)
이메일 : email 문자열(20)
휴대폰 : hp 문자열(20)
회사아이디 : company_id number(5) :외부키(foreign key)


//MySQL
create table sawon(company_id int(10),
		sawon_name varchar(20),
		position varchar(30),
		email varchar(30),
		hp varchar(30),
		foreign key(company_id) references company(company_id));

데이타 추가
INSERT INTO sawon (company_id, sawon_name, position,email,hp)VALUES (10, '피준범','과장','junbumpi@ssafy@com','010-2345-1122');
INSERT INTO sawon (company_id, sawon_name, position,email,hp)VALUES (10, '이새봄','대리','bom@ssafy@com','010-4329-3355');
INSERT INTO sawon (company_id, sawon_name, position,email,hp)VALUES (30, '김아름','대리','beauty@ssafy@com','010-9901-8232');


* 10번회사가 코로나로인해 없어짐
>>>> delete from company where company_id=10; 자식을 가지는 부모테이블은 삭젝 안됨
=====> ON DELETE CASCADE 옵션을  지정해야한다.
create table sawon(company_id int(10),
		sawon_name varchar(20),
		position varchar(30),
		email varchar(30),
		hp varchar(30),
		foreign key(company_id) references company(company_id)
        on delete cascade);



-----------------------------------------------------
상품에 대한 테이블 : shop
      상품번호  num  number(5),
      상품명   sangpum  문자열(20),
      색상    color   문자열(10),
      단가    price  number(10),
      입고일 ipgoday  날짜타입

create table shop(num int(5), sangpum varchar(30), color varchar(10), price int(10), ipgoday date);

고객에 대한 테이블 : client
     고유번호  num number(5),
     이름  name  문자열(10)
     나이  age   number(5),
     주소  address  문자열(20)

create table client(num int(5), name varchar(10), age int(5), address varchar(20)); 

alter table shop add constraint pk_shop primary key(num);
alter table client add constraint pk_client primary key(num);


insert into shop values(111, '이어폰', '흰색', 12000, '2020-06-17');
insert into shop values(222, '마스크', '회색', 3000, '2020-06-18');

insert into client values(01, '강호동', 44, '여의도');
insert into client values(02, '이영자', 46, '서초동');
--------------------------------------------------------------------

장바구니 테이블 만들기
 테이블명 : cart
 상품정보 shop_num number(5) not null,
 고객정보 client_num number(5) not null,
 구입날짜  guipday date,
 갯수      cnt  number(5) not null,

       현재컬럼명,참조    ,제약조건명
외부키 shop_num->shop(num),fk_shop
       client_num->client(num),fk_client

create table cart (shop_num int(5) not null,
		client_num int(5) not null,
		guipday date not null,
		cnt int(5) not null,
		constraint fk_shop foreign key(shop_num) reference shop(num) on delete cascade,
constraint fk_shop client key(shop_num) reference client(num) on delete cascade);

insert into cart values(111, 01, '2020_06-16',3);
insert into cart values(222, 02, '2020_06-14',50);


===============================================
join 사용해서 쿼리문 조회하기

고객명 상품명 색상 갯수 가격 총금액 나이 주소
select e.empno, e.ename, e.sal, e.deptno, d.dname, d.loc
from shop s, cart c 
where s.shop_num = c.shop_num; 
